Spring Legacy Project
	1. pom.xml(각종 라이브러리 버전)
		java : 100
		springframework-version : 5.3.20
		aspectj-version : 1.9.6
		slf4j-version : 2.0.9
		servlet-api -> javax.servlet-api(artifactId)
						version : 3.1.0
						
		maven-compiler-plugin configuration : 3.8.1
			source : 11
			target : 11
			
	2. Properties 변경
		Project Facets 
			- Dynamic Web Module : 4.0
			- java :!1
			- Runtime : Apache Tomcat 체크
			
			
	3. 한글 인코딩 처리
		web.xml에 다음을 추가 
			<filter>
				<filter-name>encodingFilter</filter-name>
				<filter-class>org.springframework.web.filter.CharacterEncodingFilter
				</filter-class>
				<init-param>
					<param-name>encoding</param-name>
					<param-value>UTF-8</param-value>
				</init-param>
				<init-param>
					<param-name>forceEncoding</param-name>
					<param-value>true</param-value>
				</init-param>
			</filter>
			<filter-mapping>
				<filter-name>encodingFilter</filter-name>
				<url-pattern>/*</url-pattern>
			</filter-mapping>
			
			
Lombok 설치
	1. lombok 다운로드 후 실행하여 개발도구(sts)에 설치 
	2. maven repository에서 해당 라이브러리를 복사하여 pom.xml에 추가
	
		lombok 활용 
			1) getter/setter 자동 생성
			2) log 출력용 라이브러리 - Slf4j(Log)
			
			
MVC 패턴 
	1. controller(요청에 따른 기능의 분류)
	2. service(요청에 해당하는 기능을 제공)
	3. dao(Data Access Object, DB의 CRUD를 제공)
	4. dto(Data Transfer Object, data를 담아서 옮기는 역할을 담당)
		vo(Value Object)
		entity(DB 테이블과 매핑하여 사용하는 객체)
		
		
JSP(Java Server Page)
	JSP = HTML + Java
	
EL(Expression Language)


JSTL(JSP Standard Tag Library)
	
	